# number of symbols in pdfa alphabet
alphabet_size: 4

# number of states in pdfa state space
num_states: 2

# symbol to use as the transition to a final state
final_transition_sym: '$'

# symbol to use as the empty (a.k.a. lambda) symbol
empty_transition_sym: 'lambda'

# unique start state string label of pdfa
start_state: 's0'

# whether or not to smooth the input sym. transition distributions
smooth_transitions: False

# whether an edge is expressed as a boolean formula or a set of atomic propositions
# boolean_formula: True

# define a list of node labels, where each label is a string identifier label
# for a unique node, and the metadata properties for each node
nodes:

  's0':
    is_accepting: False

  's1':
     is_accepting: False

  's2':
    is_accepting: False

  's3':
    is_accepting: False

  's4':
    is_accepting: False

  's5':
    is_accepting: False

  's6':
    is_accepting: False

  's7':
    is_accepting: False

  's8':
    is_accepting: False

  's9':
    is_accepting: False

  's10':
    is_accepting: False

  's11':
    is_accepting: False



# define the edges of the graph
edges:

  's0':
    's0':
      symbols:
        - '!water_blue_open'
    's1':
      symbols:
        - 'water_blue_open'

  's1':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's2':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's2':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's3':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's3':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's4':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's4':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's5':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's5':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's6':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's6':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's7':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's7':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's8':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's8':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's9':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's9':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's10':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's10':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
    's11':
      symbols:
        - '!floor_green_open & !carpet_yellow_open'

  's11':
    's0':
      symbols:
        - '!water_blue_open & carpet_yellow_open'
    's1':
      symbols:
        - 'water_blue_open & carpet_yellow_open'
